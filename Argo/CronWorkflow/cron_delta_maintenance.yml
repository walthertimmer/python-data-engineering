apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: cron-delta-maintenance
  namespace: argo
  labels:
    app: delta-maintenance
    environment: production
  annotations:
    description: "Performs maintenance on Delta tables in S3"
spec:
  schedule: "0 0 * * 6"  # Runs every Saturday at midnight
  concurrencyPolicy: Replace
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  workflowSpec:
    serviceAccountName: argo-workflows-server
    entrypoint: run-script
    templates:
    - name: run-script
      dag:
        tasks:
        - name: maintain-delta-tables
          template: delta-maintenance

    - name: delta-maintenance
      container:
        image: ghcr.io/walthertimmer/python-data-engineering/python-scripts:latest
        command: ["python", "/scripts/00_delta_maintenance.py"]
        imagePullPolicy: Always
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
        env:
          - name: S3_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: python-data-engineering
                key: S3_ACCESS_KEY_ID
                namespace: argo
          - name: S3_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: python-data-engineering
                key: S3_SECRET_ACCESS_KEY
                namespace: argo
          - name: S3_ENDPOINT_URL
            valueFrom:
              secretKeyRef:
                name: python-data-engineering
                key: S3_ENDPOINT_URL
                namespace: argo
          - name: S3_BUCKET
            valueFrom:
              secretKeyRef:
                name: python-data-engineering
                key: S3_BUCKET
                namespace: argo
        volumeMounts:
          - name: workdir
            mountPath: /workdir
          - name: ivy-cache
            mountPath: /tmp/.ivy2
        workingDir: /workdir
      volumes:
          - name: workdir
            emptyDir: {}
          - name: ivy-cache
            emptyDir: {}

    retryStrategy:
      limit: 1
      retryPolicy: OnError
    activeDeadlineSeconds: 3600  # Must complete within 1 hour
    ttlStrategy:
      secondsAfterCompletion: 86400  # Keep workflows for 1 day
    podGC:
      strategy: OnWorkflowSuccess